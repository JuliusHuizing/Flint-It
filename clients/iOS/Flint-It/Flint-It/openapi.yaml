openapi: "3.0.3"
info:
  title: FLINT-conversation-service
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  # - description: SwaggerHub API Auto Mocking
  #   url: https://virtserver.swaggerhub.com/jhuizing/test/1.0.0
  - description: "local host"
    url: http://localhost:8000
    
paths:
  /chat:
    post:
      summary: Process chat messages
      description: Accepts a list of chat messages and returns a processed string response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  $ref: '#/components/schemas/Messages'
      responses:
        '200':
          description: Successfully processed the chat messages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
         
        '400':
          description: Invalid request, when 'messages' are not provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Message is required"
  /computeActFrame:
    post:
      summary: Process user input
      description: Endpoint to process user input
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  message:
                    type: string
              
      responses:
        '200':
          description: Successfully processed the data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActFrame'

  /stream_reasoning:
    post:
      
      summary: Stream Reasoning
      description: Accepts a list of messages and streams responses from the OpenAI API.
      requestBody:
        required: true
        content:
           application/json:
            schema:
                type: object
                properties:
                  message:
                    type: string

      responses:
        '200':
          description: A stream of responses from the OpenAI API.
          content:
            text/event-stream:
              schema:
                type: string
                example: "Response text from OpenAI API..."
components:
  schemas:
    LatentResponse:
      type: object
      properties:
        is_first_time_user_provides_norm:
          type: boolean
        user_asks_about_something_unrelated:
          type: boolean
        provided_norm:
          type: string
        user_asks_for_clarification_about_generated_act_frame:
          type: boolean
        user_asks_for_improved_act_frame:
          type: boolean
    ChatResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        actFrames:
          type: array
          items:
            $ref: '#/components/schemas/ActFrame'
          nullable: true
        latentResponse:
          $ref: '#/components/schemas/LatentResponse'
          nullable: true

    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        role:
          type: string
          enum: [system, user]
          description: The role of the message sender.
        content:
          type: string
          description: The content of the message.

    ActFrame:
      type: object
      properties:
        Action:
          type: string
          example: grant
        Actor:
          type: string
          example: Minister of Justice and Security
        Object:
          type: string
          example: application to provide a temporary regular residence permit
        Recipient:
          type: string
          example: alien
        Preconditions:
          $ref: '#/components/schemas/BooleanSet'
        Creating_postcondition:
          type: array
          items:
            type: string
          example:
            - decision to grant an application to provide a temporary regular residence permit
            - granting a temporary regular residence permit under restrictions
            - determine the period of validity of the regular residence permit
            - provide the alien with a document proving lawful residence
        Terminating_postcondition:
          type: array
          items:
            type: string
          example:
            - application to provide a temporary regular residence permit
        References_to_sources:
          type: array
          items:
            type: string
          example:
            - Art. 14 (1) Aliens Act, main clause and under (a)
      required:
        - Action
        - Actor
        - Object
        - Recipient
        - Preconditions
        - Creating_postcondition
        - Terminating_postcondition
        - References_to_sources


    BooleanSet:
      type: object
      properties:
        and:
          type: array
          items:
            $ref: '#/components/schemas/BooleanSet'
        or:
          type: array
          items:
            $ref: '#/components/schemas/BooleanSet'
        not:
          $ref: '#/components/schemas/BooleanSet'
        condition:
          type: string
      additionalProperties: false
      example: # Corrected example section
        and:
          - condition: "regular residence permit is granted"
          - not:
              condition: "residence permit granted earlier than application receipt"
          - not:
              condition: "alien has a travel ban"
          - not:
              condition: "alien has pronouncement of undesirability"
        or:
          - condition: "applicant has valid passport"
          - condition: "applicant has valid ID card"
        not:
          condition: "applicant is currently under detention"
